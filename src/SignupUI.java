
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Field;
import java.security.InvalidKeyException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author giann
 */
public class SignupUI extends javax.swing.JFrame {

    private ObjectInputStream in;
    private ObjectOutputStream out;

    public SignupUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Please sign up to use our app.... ");

        jLabel2.setText("E-Mail:");

        jLabel3.setText("Username:");

        jLabel4.setText("Name-Forname:");

        jLabel5.setText("Password");

        jButton1.setText("Sign up");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jButton1)
                .addContainerGap(165, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //an to arxeio users uparxei kai h synarthsh checkforusername gurnaei false(dhladh to username den einai monadiko)
        if (new File("Users.dat").exists() && checkforusername(jTextField3.getText()) == false) {
            jTextField3.setText(""); //
            JOptionPane.showMessageDialog(null, "Username already in use");
        } else {
            try { //diaforetika pernei to public key ths efarmoghs(to opoio exei lhfthei apo to arxeio)
                Crypto cr=new Crypto();
                PublicKey publicKey =Wallet.publicKey;

                //dhmiourgei ena tuxaio salt to opoio einai monadiko gia kathe xrhsth
                SecureRandom random = new SecureRandom();
                byte[] salt = new byte[16];
                random.nextBytes(salt);
                //me to salt kai ton kwdiko toy xrhsth ektelei thn getsecurepassword gia to hash

                String pass = getSecurePassword(jPasswordField1.getText(), salt);
                //to string tou hash ginete encrypt me to public key ths efarmoghs
                String cryptopass = cr.encryptText(pass, publicKey);
                //apothikeuonte oi times gia to antikeimeno se ena antikeimeno user(salt,encrypt-hashedpassword,username ktlp)
                User u = new User(jTextField3.getText(), cryptopass, jTextField2.getText(), jTextField1.getText(), Base64.getEncoder().encodeToString(salt));
                //ektelei thn sunarthsh h opoia eggrafei ton xrhsth sto arxeio
                setuser(u);
                //synarthsh dhmioyrgias summetrikou kleidiou aes kai apothikeyshs tou se katallhlo arxeio
                aestofile();
                JOptionPane.showMessageDialog(null,"You Signed up");
                this.setVisible(false); //kleinei to parathuro kai emfanizei to parathuro login
                new LoginUI().setVisible(true);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false); //otan pataei back kleinei to sugkekrimeno parathuro
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignupUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignupUI().setVisible(true);

            }
        });
    }

    public static String getSecurePassword(String password, byte[] salt) {

        String generatedPassword = null;
        try {
            //messagedigest me sha256 gia na gnwrizei me pio algorithmo tha kanei hash
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            md.update(salt);//vazei mesa to salt
            byte[] bytes = md.digest(password.getBytes());//kanei digest ton kwdiko mazi me to salt kai to apotelesma einai ena byte array
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < bytes.length; i++) {
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            generatedPassword = sb.toString();  //ftiaxnei to string kai epomenos paragete o hashed-salted password o opoios epistrefetai apo thn sunarthsh
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return generatedPassword;
    }
//synarthsh h opoia elegxei me input to arxeio users.dat gia an uparxei to username pou edwse o xrhsths

    public boolean checkforusername(String name) {
        try {
            in = new ObjectInputStream(new FileInputStream("Users.dat"));
            while (true) {
                Object b = in.readObject();
                Field f = b.getClass().getDeclaredField("username");
                f.setAccessible(true);
                if (f.get(b).equals(name)) {  //elegxei ola ta stoixeia tou arxeiou kai an vrethei idio username epistrefei false

                    return false;
                }

            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EOFException exception) {
            return true;  //an to arxeio teleiwsei tote to username einai monadiko
        } catch (ClassNotFoundException | IllegalArgumentException | IllegalAccessException | NoSuchFieldException | SecurityException | IOException ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return true;
    }
//sunarthsh h opoia grafei ton xrhsth sto arxeio dhladh ton kanei sign up

    public void setuser(User u) {
        try {
            File f = new File("Users.dat");
            if (f.createNewFile()) { //an to arxeio den uparxei tote dhmiourgeite

                ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("Users.dat"));
                out.writeObject(u);  //kai to antikeimeno grafete mesa se auto
                out.flush();
                out.close();
            } else { //an to arxeio uparxei hdh tote xrhshmopoiei mia appendableobject outputstream wste na mporesei na kanei append to username xwris na xalasei to header
                AppendableObjectOutputStream out = new AppendableObjectOutputStream(new FileOutputStream("Users.dat", true));
                out.writeObject(u); //grafei to antikeimeno sto arxeio kanontas append
                out.flush();
                out.close();
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //synarthsh dhmiourgias kai apothikeushs tou kleidiou aes

    public void aestofile() {
        try {
            //pernei to public key ths efarmoghs
            Crypto cr = new Crypto();
            PublicKey publicKey = Wallet.publicKey;
            //kanei generate to kleidi aes 256
            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
            keyGen.init(256); // for example
            SecretKey secretKey = keyGen.generateKey();
            //metatroph secretkey se string
            String keytostring = Base64.getEncoder().encodeToString(secretKey.getEncoded());
            //kanei encrypt to summetriko kleidi
            String aes256 = cr.encryptText(keytostring, publicKey);

            File f = new File(jTextField3.getText() + "/Aes");
            f.getParentFile().mkdirs(); //dhmiourgei to arxeio ston fakelo tou xrhssth aes
            FileOutputStream fos = new FileOutputStream(f);
            ByteArrayOutputStream bout = new ByteArrayOutputStream();
            bout.write(Base64.getDecoder().decode(aes256)); //pernaei to encrypted aes key meso bytearrayoutput sto antistoixo arxeio gia to aes tou xrhsth
            bout.writeTo(fos);
            bout.flush();
            bout.close();
            fos.close();
        } catch (IllegalBlockSizeException | BadPaddingException | InvalidKeyException | NoSuchPaddingException | IOException ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(SignupUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
